/***************************************************************************/
/*
/*      http://huziketang.com/books/react/lesson17
/*
/***************************************************************************/
/*
/*  CommentList2 和 CommentList 并列为 CommentApp 的子组件，
/*  它也需要依赖 comments 显示评论列表。但是因为 comments 数据在 CommentList 中，
/*  它没办法访问到。
/*
/*  遇到这种情况，将这种组件之间共享的状态交给组件最近的公共父节点保管，
/*  然后通过 props 把状态传递给子组件，这样就可以在组件之间共享数据了。
/*
/*  如果把 comments 交给父组件 CommentApp ，
/*  那么 CommentList 和 CommentList2 都可以通过 props 获取到 comments，
/*  React.js 把这种行为叫做“状态提升”。
/*
/***************************************************************************/
/*
/*  总结一下：当某个状态被多个组件依赖或者影响的时候，
/*  就把该状态提升到这些组件的最近公共父组件中去管理，
/*  用 props 传递数据或者函数来管理这种依赖或着影响的行为。
/*
/***************************************************************************/
/*
/*  问题来了：当多个子树深层嵌套使用依赖同一个数据时，
/*  如何更好的管理这种被多个组件所依赖或影响的状态？
/*
/*  答案： React并没有提供号的解决方案来管理组件之间的共享状态。
/*  实际项目中，状态提升不是一个好的解决方案！！！
/*  引入Redux，该管理工具可帮助来管理这种共享状态
/*
/***************************************************************************/
